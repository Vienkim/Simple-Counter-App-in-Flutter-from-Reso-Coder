import 'package:flutter/material.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';

abstract class WebSocket {
  Stream<int> getCounterStream();
}

class FakeWebSocket implements WebSocket {
  @override
  Stream<int> getCounterStream() async* {
    int i = 0;
    while (true) {
      await Future.delayed(const Duration(milliseconds: 500));
      yield i++;
    }
  }
}

final counterProvider = StateProvider.autoDispose<int>((ref) => 1);

void main() {
  runApp(ProviderScope(child: const MyApp()));
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Counter App',
      theme: ThemeData(
        colorScheme: ColorScheme.fromSeed(
          seedColor: Colors.green,
          brightness: Brightness.dark,
          surface: const Color(0xff003909), 
          ),
        useMaterial3: true,
      ),
      debugShowCheckedModeBanner: false,
      home: const Home(),
    );
  }
}

class Home extends StatelessWidget {
  const Home({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
       title: const Text('Home'),
     ),
      body: Center(
        child: ElevatedButton(
          onPressed: () {
           Navigator.of(context).push(
             MaterialPageRoute(
               builder: ((context) => const CounterPage()),
             ),
           );
         },
          child: const Text('Go to Counter Page'),
        ),
      ),
    );
  }
}

class CounterPage extends ConsumerWidget {
  const CounterPage ({super.key});

  @override
  Widget build(BuildContext context, WidgetRef ref) {

    final counter = ref.watch(counterProvider);

    ref.listen<int>(counterProvider, (previous, next) {
        if(next >= 5){
          showDialog(
        context: context,
        builder: (context) {
            return AlertDialog(
              title: const Text('Alert!'),
              content: const Text('Count is dangerously high - consider resetting the counter!'),
              actions: [
                TextButton(
                  onPressed: (){
                    Navigator.of(context).pop();
                  },
                  child: const Text('OK'),
                  )
              ],
            );
          }
        );
        }
      },
    );

    return Scaffold(
      appBar: AppBar(
        title: const Text('Counter'),
        actions: [
          IconButton(onPressed: () {
            ref.invalidate(counterProvider);
          }, 
          icon: const Icon(Icons.refresh)),
        ],
      ),
      body: Center(
        child: Text(
          counter.toString(),
          style: Theme.of(context).textTheme.displayMedium,
        ),
      ),
      floatingActionButton: FloatingActionButton(
        onPressed: () {
          ref.read(counterProvider.notifier).state++;
        },
        child: const Icon(Icons.add),
        ),
    );
  }
}
